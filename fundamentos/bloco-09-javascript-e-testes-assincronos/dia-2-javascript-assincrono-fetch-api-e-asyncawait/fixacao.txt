O que é um código que é executado de modo assíncrono? Qual é a diferença disso para um código que é executado de modo síncrono?
  Códigos assíncronos são aqueles que são executadas paralelamente e independente ao fluxo síncrono padrão.
  Já os códigos síncronos são os que precisam aguardar a finalização da execução do código anterior para que sejam executados.
  Quando iniciam sua execução, toda a aplicação aguarda sua finalização até que o código seguinte possa ser executado também.

Quando você tem que enfileirar várias callbacks, que problema surge?
  O enfileiramento exagerado pode gerar o callback hell.

Por que as Promises são uma forma de resolver esse problema?
  As promises têm funções internas que são mecanismos que viabilizam o controle do fluxo assíncrono.

Quando você vai se comunicar com uma API, tal comunicação deve ser síncrona ou assíncrona? Lembre-se de que o serviço ao qual você está se conectando pode demorar muito ou pouco para dar retorno, pode estar fora do ar etc.
  Ao utilizar APIs a comunicação deve ser assíncrona, de modo que ocorra paralelamente ao restante do código e, dessa forma, evite que a aplicação
  tenha seu desempenho prejudicado caso haja algum problema com a API.

Dada a resposta anterior, o que é fetch e para que ele serve?
  Fetch é uma função que faz requisições a APIs e trata os dados ou erros retornados por ela.