# Exerc√≠cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.

SELECT m.title, bo.domestic_sales, bo.international_sales
FROM pixar.movies m
INNER JOIN pixar.box_office AS bo ON m.id = bo.movie_id;

# üöÄ Exerc√≠cio 2: Utilizando o INNER JOIN, fa√ßa uma busca que retorne o n√∫mero de vendas para cada filme que possui um n√∫mero maior de vendas
# internacionais (international_sales) do que vendas nacionais (domestic_sales).

SELECT m.title, SUM(bo.domestic_sales) + SUM(bo.international_sales) AS qtde_vendas
FROM pixar.movies m
INNER JOIN pixar.box_office AS bo ON m.id = bo.movie_id
WHERE bo.international_sales > bo.domestic_sales
GROUP BY bo.movie_id;

# üöÄ Exerc√≠cio 3: Utilizando o INNER JOIN, fa√ßa uma busca que retorne os filmes e sua avalia√ß√£o (rating) em ordem decrescente.

SELECT m.title, bo.rating
FROM pixar.movies m
INNER JOIN pixar.box_office AS bo ON m.id = bo.movie_id
ORDER BY bo.rating DESC;

# Exerc√≠cio 4: Utilizando o LEFT JOIN, fa√ßa uma busca que retorne todos os dados dos cinemas, mesmo os que n√£o possuem filmes em cartaz e,
# adicionalmente, os dados dos filmes que est√£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfab√©tica.

SELECT * FROM pixar.theater t
LEFT JOIN pixar.movies m ON t.id = m.theater_id
ORDER BY t.name;

# Exerc√≠cio 5: Utilizando o RIGHT JOIN, fa√ßa uma busca que retorne todos os dados dos filmes, mesmo os que n√£o est√£o em cartaz e, adicionalmente,
# os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfab√©tica.

SELECT * FROM pixar.theater t
RIGHT JOIN pixar.movies m ON t.id = m.theater_id
ORDER BY t.name;